name: Test

# Trigger the workflow on push or pull request
on:
  push:
    paths:
      - 'zram-config'
      - '**.bash'
      - 'tests/**'
      - '.github/workflows/test-action.yml'
  pull_request:
    paths:
      - 'zram-config'
      - '**.bash'
      - 'tests/**'
      - '.github/workflows/test-action.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout repository
         uses: actions/checkout@v3
       - name: Setup environment
         id: setup
         run: |
           sudo -E bash -c set
           sudo add-apt-repository ppa:canonical-server/server-backports
           sudo apt-get update
           sudo apt-get install --yes gnupg xz-utils expect systemd-container qemu-user-static qemu-utils qemu-system-arm
           echo "::set-output name=imagexz::$(basename "$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf_latest" -s -L -I  -o /dev/null -w '%{url_effective}')")"
           echo "::set-output name=image::$(echo "$(basename "$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf_latest" -s -L -I  -o /dev/null -w '%{url_effective}')")" | sed -e 's/.xz//')"
       - name: Cache Raspberry Pi OS 32bit image
         uses: actions/cache@v3
         with:
           path: ${{ steps.setup.outputs.image }}
           key: ${{ steps.setup.outputs.image }}
       - name: Build image
         run: sudo -E ./tests/image.bash "setup" "${{ steps.setup.outputs.imagexz }}" "${{ steps.setup.outputs.image }}"
         shell: bash
       - name: Run tests
         run: |
           cp "${{ steps.setup.outputs.image }}" raspios.img
           sudo expect ./tests/run.exp
         shell: bash
       - name: Copy logs
         if: always()
         run: sudo ./tests/image.bash "copy-logs" "raspios.img"
       - name: Upload logs
         if: always()
         uses: actions/upload-artifact@v2
         with:
           name: logs.tar
           path: logs.tar
