name: Test

# Trigger the workflow on push or pull request
on:
  push:
    paths:
      - 'zram-config'
      - '**.bash'
      - '.github/workflows/test-action.yml'
  pull_request:
    paths:
      - 'zram-config'
      - '**.bash'
      - '.github/workflows/test-action.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout repository
         uses: actions/checkout@v2.4.0
       - name: Setup environment
         id: setup
         run: |
           sudo -E bash -c set
           sudo apt-get install --yes gnupg unzip qemu-utils qemu-system-aarch64
           echo "::set-output name=image32::$(basename "$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf_latest" -s -L -I  -o /dev/null -w '%{url_effective}')")"
       - name: Cache Raspberry Pi OS 32bit image
         uses: actions/cache@v2.1.7
         with:
           path: ${{ steps.setup.outputs.image32 }}
           key: ${{ steps.setup.outputs.image32 }}
       - name: Build image
         run: |
           if ! [[ -f ${{ steps.setup.outputs.image32 }} ]]; then curl -L "https://downloads.raspberrypi.org/raspios_lite_armhf_latest" -o "${{ steps.setup.outputs.image32 }}"; fi
           curl -s "$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf_latest" -s -L -I  -o /dev/null -w '%{url_effective}')".sig -o "${{ steps.setup.outputs.image32 }}".sig
           gpg -q --keyserver keyserver.ubuntu.com --recv-key 0x8738CD6B956F460C
           gpg -q --trust-model always --verify "${{ steps.setup.outputs.image32 }}".sig "${{ steps.setup.outputs.image32 }}"
           unzip -q "${{ steps.setup.outputs.image32 }}" -d .
           mv *-raspios-*.img raspios.img
           qemu-img resize -f raw raspios.img 4G
           echo ", +" | sfdisk -N 2 raspios.img
           loopPrefix="$(sudo kpartx -asv raspios.img | grep -oE "loop([0-9]+)" | head -n 1)"
           mkdir -p tests/{boot,root,kernel,dtb}
           sudo mount -o rw -t vfat "/dev/mapper/${loopPrefix}p1" "tests/boot"
           sudo mount -o rw -t ext4 "/dev/mapper/${loopPrefix}p2" "tests/root"
           sudo cp tests/boot/kernel* tests/kernel
           sudo cp tests/boot/*.dtb tests/dtb
           sudo rsync -avr --exclude="*.zip" --exclude="*.img" --exclude="tests" ./ tests/root/opt/zram
           sudo cp tests/rc.local tests/root/etc/
           sudo umount tests/boot
           sudo umount tests/root
           sudo kpartx -d raspios.img
       - name: Run tests
         run: |
           sudo qemu-system-aarch64 \
             -machine "raspi2" \
             -cpu arm1176 \
             -m "1024m" \
             -drive "format=raw,file=raspios.img" \
             -netdev user,id=net0,hostfwd=tcp::5022-:22 \
             -device e1000,netdev=net0 \
             -dtb "tests/dtb/bcm2710-rpi-2-b.dtb" \
             -kernel "tests/kernel/kernel7.img" \
             -append "rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0 root=/dev/mmcblk0p2 rootwait panic=1 dwc_otg.fiq_fsm_enable=0" \
             -no-reboot \
             -display none \
             -serial stdio
